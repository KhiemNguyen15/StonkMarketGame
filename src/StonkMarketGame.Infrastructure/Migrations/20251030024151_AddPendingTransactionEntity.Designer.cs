// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StonkMarketGame.Infrastructure.Persistence;

#nullable disable

namespace StonkMarketGame.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251030024151_AddPendingTransactionEntity")]
    partial class AddPendingTransactionEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StonkMarketGame.Core.Entities.PendingTransaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ScheduledFor")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("Status", "ScheduledFor");

                    b.ToTable("PendingTransactions");
                });

            modelBuilder.Entity("StonkMarketGame.Core.Entities.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("StonkMarketGame.Core.Entities.UserPortfolio", b =>
                {
                    b.Property<decimal>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal>("CashBalance")
                        .HasColumnType("numeric");

                    b.HasKey("UserId");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("StonkMarketGame.Core.Entities.UserPortfolio", b =>
                {
                    b.OwnsMany("StonkMarketGame.Core.Entities.StockHolding", "Holdings", b1 =>
                        {
                            b1.Property<decimal>("PortfolioId")
                                .HasColumnType("numeric(20,0)");

                            b1.Property<string>("Ticker")
                                .HasColumnType("text");

                            b1.Property<decimal>("AveragePrice")
                                .HasColumnType("numeric");

                            b1.Property<int>("Quantity")
                                .HasColumnType("integer");

                            b1.HasKey("PortfolioId", "Ticker");

                            b1.ToTable("StockHolding");

                            b1.WithOwner()
                                .HasForeignKey("PortfolioId");
                        });

                    b.Navigation("Holdings");
                });
#pragma warning restore 612, 618
        }
    }
}
